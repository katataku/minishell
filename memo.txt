
対応できていることを確認済み
(1) " "のようにクオートした空白文字だけをコマンドラインに入力すると、`echo $?`の出力が258に変わってしまう。
(4) `export A=1 123`のようにexportの2つ目以降の引数がスルーされている。
(5) `unset`も2つ目以降の引数がスルーされている。
(9) `unset PATH`の後に`export PATH=/bin`しても`ls`など`/bin`にいるコマンドが見つからない。
[14] シンボリックリンクから起動時にpwdと$PWDが正常に設定されませんでした
[15] カレント削除後cd . cd ..でpwdが正常に修正されませんでした
(2) `echo a "  " b` の出力は`a b`(4文字)であるべきだが、`a b`(3文字)になる。
[7] signal ハンドラの設定が呼び出し元から引き継がれませんでした。ハンドラが非同期安全ではありませんでした

対応不要と判断
 [6] exit 後ろのスペースがtrimされませんでした
 [8] export +=が実装されていませんでした

要対応
(3) `export VAR`のように値を代入せずに定義した場合、`export`で表示されない。


挙動に差異あり・要検討


対象外なので、無視
 [2] makefile substを使用されていましたが、patsubstにした方が安全そうです。$(*D)使うといいかも


パスする！当たったらお勉強する。
 [1] 子プロセスの実行部分に多数のリークがありました(getpid()とleaksコマンドを組み合わせてデストラクタに設定することで検知可能でした)
 [4] stdoutがcloseされていると正常に動作しませんでした。fd 1がopenされていることを期待した実装になっているようです。（原因を特定し忘れました分かったら教えて！）
 [5] 名前付きpipeへのリダイレクトでブロッキングされませんでした（原因を特定し忘れました分かったら教えて！）


意味わからないのでパス
 [3] echo printfのエラーハンドリングが漏れていました


未確認


 [9] 存在しないdirから起動できませんでした
 [10] cd pwd currentを削除して移動したときpwdが正しく修正されず、cdの挙動が合わないケースがありました
 [11] PATH ":"や"", unsetでカレントからコマンドが実行されませんでした
 [12] permissionのないコマンドのエラーがハンドルされていませんでした
 [13] 環境変数 bashはcmdがexportのときは単語分割がおきないようです
 [14] heredoc inquoteが未初期化になるケースがありました。forkせずに受け取ることもできそうです
 [15] ヘッダが分割されていたので、includeも必要最低限になっているとよりよかったと思います
 [16] prompt、echo backが標準出力に出ていました
 [17] cat file | minishellやminishell <fileのような実行でもプロンプトやexitが出力されていました
 [18] signal関数は処理系定義の動作を多く含むのでsigactionを使った方がいいかも
 excve("./minishell", argv, argv);のような入力でcrashしましたが、レビュー解散後だったのでOKで提出しました。strchrで"="が存在していることを期待していて、エラーハンドリングが漏れていたことが原因でした。
 [1] echo ispotが未初期化だったので、-n無しの挙動が不定でした
 [2] echo writeのエラーハンドリングがされていませんでした
 [4] echo $? 初回時にオーバーランがあるようでした
 [5] exit 20文字以上の入力でnumeric~のようなエラーになっていました
 [6] forkエラー時の戻り値が0になっていました
 [7] SIGQUITをIGNに設定した状態からの起動でブロキングするコマンドをctrl \を狩猟できていました
 [8] export A をしたときに変数Aが作成されませんでした
 [9] cd シンボリックで正常に動作しませんでした
 [10] pwd シンボリックで正常に動作しませんでした
 [11] permission deniedでハンドルされる入力がcommand not foundになっていました
 [12] PATH=":"のときにカレントと結合されていませんでした
 [13] heredocがctrl cで終了しませんでした
 [14] cat <<A <txt >res のような入力でheredocの内容がresに出力されていました
 [15] A=""; echo a $A b;A="a b"; echo $Aなどの出力がbashと異なっていました
 heredoc中にsignalが効かない
 exit " 42 "がnon-numericargumentとして扱われる
`exit 18446744073709551616` で "numeric argument required" ではなく exit 0 と同じ結果になっていました。
`echo $42` のように、"$" の後に isnumeric() な文字をつけると strdup("") した文字列が leak していました。
複数のpipeをつなげたときにsyntax error
[1] clear_history使われてました
[2] $(MAKE)使うといいかも
[3] ヘッダとの依存関係出力させるといいかも
[4] stdoutがcloseされるとdupでSTDINになっていました
[5] echo writeのerror ハンドル漏れ
[6] exit LOGNMINに0パディングを入れたときと、正の値にオーバーフローする値で正常に動作しませんでした。末尾のtrimで\tが漏れていました
[7] hdoc <<A <<A -> Aでexitされました。親プロセスでも実行できそう
[8] fork errorでexitされました
[9] 終了ステータス promptでctrl+Cは1、cmd のSIGINTは130、syntax errは2とそれぞれが異なるbashのversionの仕様になっていました。hdocでctrl+C時0になってました
[9] 変数展開の位置がlexerでしたが、bashは実行直前かも。そのせいかexport A="'"B"'";echo $Aの出力が合いませんでした
[10] export A="A B" export B=$A=Cの出力が合いませんでし
[11] signal 設定が呼び出し元プロセスから引き継がれていませんでした。minish内minishで正常に動きませんでした。ハンドラが非同期安全ではありませんでした。名前きpipeへのリダイレクト時にSIGQUITが無視されない
[12] export +=が未実装でした。export ""で変数が作成されました
[13] pwd 存在しないdirから起動するとsegv

[16] PATH "" NULLでカレントから実行されませんでした。パーミッションエラー時は一つ目のpath/cmdが出力されます
[17] is_unpermittedがcommand not found時に未初期化で参照されていたため、出力が不定でした
[18] waitpidが-1を返すときはstatusの初期化は行われないようでした WIFSIGNALEDでは正常に判定できないようです


(6) Guacamoleにおいて`/tmp`以下にいる時の`pwd`の出力が`/private/tmp...`になる。
(7) カレントディレクトリの実行権限(x)がない状態で `cd ..`がPermission deniedで失敗する。
(8) カレントディレクトリにパスが通っていない状態で、カレントディレクトリの実行ファイルを`./`なしで実行できてしまう。

